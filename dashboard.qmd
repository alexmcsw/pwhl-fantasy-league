---
title: "PWHL Fantasy League"
author: "Noah Bolohan"
format: dashboard
---

```{r}
library(tidyverse)
library(gt)
library(bslib)
library(shiny)
library(bsicons)

invisible(
    lapply(
        list.files(
            "./R",
            full.names = TRUE
        ),
        source
    )
)
```

```{r}
season <- 2025

current_date <- "2024-12-05"
season_start <- "2024-11-30"

team_logo_urls <- c(
    "https://upload.wikimedia.org/wikipedia/en/b/bc/BostonFleet.png",
    "https://upload.wikimedia.org/wikipedia/en/a/ae/MinnesotaFrost.png",
    "https://upload.wikimedia.org/wikipedia/en/thumb/9/93/Montreal_Victoire_Logo.svg/800px-Montreal_Victoire_Logo.svg.png",
    "https://upload.wikimedia.org/wikipedia/en/thumb/f/f9/New_York_Sirens_Logo.svg/1024px-New_York_Sirens_Logo.svg.png",
    "https://upload.wikimedia.org/wikipedia/en/thumb/4/40/Ottawa_Charge_Logo.svg/1280px-Ottawa_Charge_Logo.svg.png",
    "https://upload.wikimedia.org/wikipedia/en/thumb/5/51/Toronto_Sceptres.svg/800px-Toronto_Sceptres.svg.png"
)

names(team_logo_urls) <- pwhl_teams()$team_label |>
recode(
    "Montreal"="Montréal"
)

team_codes <- pwhl_teams()$team_code

names(team_codes) <- pwhl_teams()$team_label |>
recode(
    "Montreal"="Montréal"
)

all_teams <- team_stats(season)

schedule <- pwhl_schedule(
    season
)

schedule$home_team_logo <- team_logo_urls[
    match(
        schedule$home_team,
        names(team_logo_urls)
    )
]

schedule$home_team_code <- team_codes[
    match(
        schedule$home_team,
        names(team_codes)
    )
]

schedule$away_team_logo <- team_logo_urls[
    match(
        schedule$away_team,
        names(team_logo_urls)
    )
]

schedule$away_team_code <- team_codes[
    match(
        schedule$away_team,
        names(team_codes)
    )
]

schedule$game_date <- schedule$game_date |>
str_split_i(
    pattern=",",
    i=-1
) |>
trimws() |>
map(
    parse_schedule_year,
    season_start=season_start
)

schedule_to_date <- schedule |>
filter(
    game_date < ymd(current_date)
)


player_boxes_per_game <- list()

for (game_id in schedule_to_date$game_id) {
    player_boxes_per_game[[game_id]] <- pwhl_player_box(
        game_id=game_id
    )
}

rosters_idx_gsheet <- get_google_sheet(
    sheetId = 0
)

team_images <- rosters_idx_gsheet$team_image |>
set_names(
    rosters_idx_gsheet$team_name
)
```

```{r}
rosters_idx <- rosters_idx_gsheet |>
    select(!(team_name:team_image)) |>
    t() |>
    data.frame() |>
    set_names(
        rosters_idx_gsheet$team_name
    )

team_rosters <- rosters_idx |> map(
    filter_for_roster_idx,
    all_teams = all_teams
)

roster_points_per_game <- get_roster_points_per_game(
    team_rosters,
    player_boxes_per_game
)

standings <- compute_standings(
    roster_points_per_game,
    team_images
)

last_game_day_date <- Filter(
    function(x) ymd(x) < ymd(current_date),
    schedule$game_date
) |> last()

last_game_day <- schedule |>
filter(
    game_date == ymd(
        last_game_day_date
    )
) |> mutate(
    roster_points_per_game[game_id,]
)

next_game_day_date <- Filter(
    function(x) ymd(x) >= ymd(current_date),
    schedule$game_date
)[[1]]

next_game_day <- schedule |>
filter(
    game_date == ymd(
        next_game_day_date
    )
) |> mutate(
    time = "6:00pm EST"
)
```

# Overview

(Fake) Current date: `{r} current_date`

## Row

```{r}

p_args <- next_game_day |>
mutate(
    temp = paste0(
            home_team_code,
            " @ ",
            away_team_code,
            ", ",
            time
        )
) |> select(
    temp
)

p_args <-map(
    p_args[,1],
    p
)

value_box(
    title = "Next game day",
    showcase = bs_icon(
        "calendar-event",
        size="6vh"
    ),
    value = tags$p(
        format(
            next_game_day_date,
            "%b%e, %Y"
        ),
        style = "font-size: 4vh;"
    ),
    theme = "success",
    !!!p_args
)
```

## Row

```{r}
#| content: valuebox
#| title: "Last game day summary"

last_game_day |> select(
    c(
        "home_team_logo",
        "home_score",
        "away_team_logo",
        "away_score",
        names(
            team_rosters
        )
    )
) |>
gt(
    groupname_col = c(
        "home_team_logo",
        "away_team_logo"
    )
) |>
tab_header(
    title = format(
        last_game_day_date,
        "%B%e, %Y"
    )
) |>
tab_stubhead(
    label = c(
        "Home",
        "Away"
    )
) |>
text_transform(
    locations = cells_row_groups(),
    fn = function(x) {
      lapply(
        x,
        function(x) {        
            html(
                paste0(
                    web_image(
                        url = sapply(
                            strsplit(
                                x,
                                " - "
                            ),
                            `[`,
                            1
                        ),
                        height = "5vh"
                    ),
                    "<span> vs. </span>",
                    web_image(
                        url = sapply(
                            strsplit(
                                x,
                                " - "
                            ),
                            `[`,
                            2
                        ),
                        height = "5vh"
                    )
                )
            )
        }
      )
    }
)
```

## Row

```{r}
#| title: "Standings"
standings |>
select(
    c(
        Team,
        Points
    )
) |>
gt() |>
text_transform(
    locations = cells_body(
        columns = Team
    ),
    fn = function(x) {
        web_image(
            url = x,
            height = "5vh"
        )
    }
)
```

# Team Standings

## Row

```{r}
#| title: "Standings"
standings |>
gt() |>
text_transform(
    locations = cells_body(
        columns = Team
    ),
    fn = function(x) {
        web_image(
            url = x,
            height = "5vh"
        )
    }
)
```

## Row

```{r}
#| title: "Standings over time"

roster_points_per_game |>
mutate(
    across(
        names(team_rosters),
        ~ .x |> as.numeric() |> cumsum()
    ),
    game_idx = 1:nrow(
        roster_points_per_game
    )
) |>
pivot_longer(
    cols = names(team_rosters),
    names_to = "team_name",
    values_to = "cum_score"
) |>
ggplot() +
geom_line(
    aes(
        x = game_idx,
        y = cum_score,
        colour = team_name
    )
)
```

# Team Rosters

## Row {.tabset}

### Noah

```{r}

html(
    web_image(
        url = team_images["Noah"],
        height = "50px"
    )
)

team_rosters$Noah |> gt() |> text_transform(
    locations = cells_body(columns = player_headshot),
    fn = function(x) {
        web_image(
            url = x,
            height = "50px"
        )
    }
)
```

### Alex

```{r}
team_rosters$Alex |> gt() |> text_transform(
    locations = cells_body(columns = player_headshot),
    fn = function(x) {
        web_image(
            url = x,
            height = "50px"
        )
    }
)
```

### Rambouillet

```{r}
team_rosters$Rambouillet |> gt() |> text_transform(
    locations = cells_body(columns = player_headshot),
    fn = function(x) {
        web_image(
            url = x,
            height = "50px"
        )
    }
)
```

### Meadow

```{r}
team_rosters$Meadow |> gt() |> text_transform(
    locations = cells_body(columns = player_headshot),
    fn = function(x) {
        web_image(
            url = x,
            height = "50px"
        )
    }
)
```